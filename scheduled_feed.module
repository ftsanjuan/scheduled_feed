<?php

/**
 * @file
 * Provides data feed functionality based on current timestamp.
 */

require_once dirname(__FILE__) . '/scheduled_feed.inc';

define('SCHEDULED_FEED_PERM_ADMIN', 'admin scheduled feed');


/**
 * Implements hook_install().
 */
function scheduled_feed_install() {
  // generate vocabulary and store it
  $vocab = (object) array(
    'module' => 'scheduled_feed',
    'name' => 'Scheduled Feed',
    'machine_name' => 'scheduled_feed',
    'description' => 'Contains various scheduled feeds',
  );
  taxonomy_vocabulary_save($vocab);

  // get vid
  $vocab = db_select('taxonomy_vocabulary', 'v')
    ->fields('v')
    ->condition('module', 'scheduled_feed', '=')
    ->execute()
    ->fetch();

  if ( $vocab ) {
    // save this vid to a variable for easy access
    variable_set('scheduled_feed_vid', $vocab->vid);

    // save the primary term to taxonomy db
    $primary = (object) array(
      'vid' => $vocab->vid,
      'name' => 'Primary Scheduled Feed',
      'tid' => SCHEDULED_FEED_PRIMARY_TID,
      'description' => 'The primary scheduled feed',
    );
    taxonomy_term_save($primary);
  }
}

/**
 * Implements hook_views_api().
 */
function scheduled_feed_views_api() {
  return array('api' => 3);
}

/**
 * Implements hook_menu().
 */
function scheduled_feed_menu() {
  $items['admin/feed/add'] = array(
    'title' => 'Scheduled Feed Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('scheduled_feed_form_add'),
    'access arguments' => array('admin scheduled feed'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Returns a form for adding a new scheduled data
 */
function scheduled_feed_form_add() {
  $form['data'] = array(
    '#type' => 'textfield',
    '#title' => t('Data to be displayed'),
    '#default_value' => '',
    '#required' => TRUE,
  );
  $form['start'] = array(
    '#type' => 'textfield',
    '#title' => t('Start timestamp'),
    '#default_value' => '',
    '#required' => TRUE,
  );
  $form['end'] = array(
    '#type' => 'textfield',
    '#title' => t('End timestamp'),
    '#default_value' => '',
    '#required' => TRUE,
  );
  $form['is_default'] = array(
    '#type' => 'checkbox',
    '#title' => t('Set as default data returned?'),
    '#default_value' => FALSE,
  );

  // get terms for dropdown
  $terms = taxonomy_get_tree(scheduled_feed_get_vid());
  $list = array();
  foreach ($terms as $term) {
    $list[$term->tid] = $term->name;
  }

  $form['tid'] = array(
    '#type' => 'select',
    '#default_value' => SCHEDULED_FEED_PRIMARY_TID,
    '#options' => $list,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Add data'),
  );

  return $form;
}

/**
 * Handles submitting new scheduled data
 */
function scheduled_feed_form_add_submit($form, &$form_state) {
  $data = (object) array(
    'data' => $form_state['values']['data'],
    'start' => $form_state['values']['start'],
    'end' => $form_state['values']['end'],
    'is_default' => $form_state['values']['is_default'],
    'tid' => $form_state['values']['tid'],
  );
  drupal_write_record('scheduled_feed_data', $data);
  dsm(t("New feed data was successfully saved."));
}





